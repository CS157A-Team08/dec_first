{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\src\\\\Components\\\\App2.js\";\nimport axios from 'axios';\nimport React, { Component, Fragment } from 'react';\nimport Categories from './Categories';\nimport { Header, Footer } from './Layouts/index';\nimport { foodItems, positions } from '../store.js';\nexport default class AppPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food_category: 'Beef',\n      posIndex: 0,\n      employees: [],\n      employee: {},\n      restaurants: [],\n      restaurant: {}\n    };\n\n    this.fetchEmployees = () => {\n      axios.get('http://localhost:12000/allemp').then(response => {\n        this.setState({\n          employees: response.data\n        });\n        this.setState({\n          employee: this.state.employees[0]\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          employees: [{\n            name: \"ErrEmployee1\",\n            employeeID: 1,\n            position: \"Chef\",\n            phone: \"(123) 456-7890\"\n          }, {\n            name: \"ErrEmployee2\",\n            employeeID: 2,\n            position: \"Hostess\",\n            phone: \"(123) 456-7890\"\n          }, {\n            name: \"ErrEmployee3\",\n            employeeID: 3,\n            position: \"Server\",\n            phone: \"(123) 456-7890\"\n          }]\n        });\n        this.setState({\n          employee: this.state.employees[0]\n        });\n      });\n    };\n\n    this.setCurrentEmp = employeeID => {\n      axios.get(\"http://localhost:12000/emp/\" + employeeID).then(response => {\n        this.setState({\n          employee: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n        const temp = this.state.employees[employeeID - 1];\n        this.setState({\n          employee: temp\n        });\n      });\n    };\n\n    this.fetchRestaurants = () => {\n      axios.get('http://localhost:12000/allrest').then(response => {\n        this.setState({\n          restaurants: response.data\n        });\n        this.setState({\n          restaurant: this.state.restaurants[0]\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.setCurrentRest = storeID => {\n      axios.get(\"http://localhost:12000/rest/\" + storeID).then(response => {\n        this.setState({\n          restaurant: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleCategorySelected = food_categories => {\n      this.setState({\n        food_category: food_categories\n      });\n    };\n\n    this.handlePositionChosen = index => {\n      this.setState({\n        posIndex: index\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRestaurants();\n    this.fetchEmployees();\n  }\n\n  //method to get foodItems based on their category\n  getItemsByCategories() {\n    return Object.entries(this.state.foodItems.reduce((foodItems, item) => {\n      const food_categories = item.food_categories;\n      foodItems[food_categories] = foodItems[food_categories] ? [...foodItems[food_categories], item] : [item];\n      return foodItems;\n    }, {}));\n  }\n\n  render() {\n    //const foodItems = this.getItemsByCategories()\n    const food_category = this.state.food_category;\n    const posIndex = this.state.posIndex;\n    const restaurant = this.state.restaurant;\n    const restaurants = this.state.restaurants;\n    const employee = this.state.employee;\n    const employees = this.state.employees;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currRestaurant: restaurant,\n      onSelectCat: this.handleCategorySelected,\n      positions: positions,\n      posIndex: posIndex,\n      onSelectPos: this.handlePositionChosen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Categories, {\n      foodItems: foodItems,\n      food_category: food_category,\n      posIndex: posIndex,\n      restaurants: restaurants,\n      employees: employees,\n      employee: employee,\n      onSelectRest: this.setCurrentRest,\n      onSelectEmp: this.setCurrentEmp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/angel/Documents/React Test App/express_react_folder/client/src/Components/App2.js"],"names":["axios","React","Component","Fragment","Categories","Header","Footer","foodItems","positions","AppPage","state","food_category","posIndex","employees","employee","restaurants","restaurant","fetchEmployees","get","then","response","setState","data","catch","error","console","log","name","employeeID","position","phone","setCurrentEmp","temp","fetchRestaurants","setCurrentRest","storeID","handleCategorySelected","food_categories","handlePositionChosen","index","componentDidMount","getItemsByCategories","Object","entries","reduce","item","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,iBAA/B;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,aAArC;AAGA,eAAe,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC3CQ,KAD2C,GACnC;AACJC,MAAAA,aAAa,EAAE,MADX;AAEJC,MAAAA,QAAQ,EAAE,CAFN;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,WAAW,EAAE,EALT;AAMJC,MAAAA,UAAU,EAAE;AANR,KADmC;;AAAA,SAe3CC,cAf2C,GAe1B,MAAM;AACnBjB,MAAAA,KAAK,CACAkB,GADL,CACS,+BADT,EAEKC,IAFL,CAEWC,QAAQ,IAAI;AACf,aAAKC,QAAL,CAAc;AAAER,UAAAA,SAAS,EAACO,QAAQ,CAACE;AAArB,SAAd;AACA,aAAKD,QAAL,CAAc;AAACP,UAAAA,QAAQ,EAAC,KAAKJ,KAAL,CAAWG,SAAX,CAAqB,CAArB;AAAV,SAAd;AACH,OALL,EAMKU,KANL,CAMYC,KAAK,IAAI;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKH,QAAL,CAAc;AAACR,UAAAA,SAAS,EAAC,CAAC;AAACc,YAAAA,IAAI,EAAC,cAAN;AAAsBC,YAAAA,UAAU,EAAC,CAAjC;AAAoCC,YAAAA,QAAQ,EAAC,MAA7C;AAAqDC,YAAAA,KAAK,EAAC;AAA3D,WAAD,EACC;AAACH,YAAAA,IAAI,EAAC,cAAN;AAAsBC,YAAAA,UAAU,EAAC,CAAjC;AAAoCC,YAAAA,QAAQ,EAAC,SAA7C;AAAwDC,YAAAA,KAAK,EAAC;AAA9D,WADD,EAEC;AAACH,YAAAA,IAAI,EAAC,cAAN;AAAsBC,YAAAA,UAAU,EAAC,CAAjC;AAAoCC,YAAAA,QAAQ,EAAC,QAA7C;AAAuDC,YAAAA,KAAK,EAAC;AAA7D,WAFD;AAAX,SAAd;AAGA,aAAKT,QAAL,CAAc;AAACP,UAAAA,QAAQ,EAAC,KAAKJ,KAAL,CAAWG,SAAX,CAAqB,CAArB;AAAV,SAAd;AACH,OAZL;AAaH,KA7B0C;;AAAA,SA+B3CkB,aA/B2C,GA+B1BH,UAAD,IAAgB;AAC5B5B,MAAAA,KAAK,CACAkB,GADL,CACS,gCAAgCU,UADzC,EAEKT,IAFL,CAEWC,QAAQ,IAAI;AACf,aAAKC,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAACM,QAAQ,CAACE;AAApB,SAAd;AACH,OAJL,EAKKC,KALL,CAKYC,KAAK,IAAI;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,cAAMQ,IAAI,GAAG,KAAKtB,KAAL,CAAWG,SAAX,CAAqBe,UAAU,GAAC,CAAhC,CAAb;AACA,aAAKP,QAAL,CAAc;AAACP,UAAAA,QAAQ,EAACkB;AAAV,SAAd;AACH,OATL;AAUH,KA1C0C;;AAAA,SA4C3CC,gBA5C2C,GA4CxB,MAAM;AACrBjC,MAAAA,KAAK,CACAkB,GADL,CACS,gCADT,EAEKC,IAFL,CAEWC,QAAQ,IAAI;AACf,aAAKC,QAAL,CAAc;AAAEN,UAAAA,WAAW,EAACK,QAAQ,CAACE;AAAvB,SAAd;AACA,aAAKD,QAAL,CAAc;AAAEL,UAAAA,UAAU,EAAC,KAAKN,KAAL,CAAWK,WAAX,CAAuB,CAAvB;AAAb,SAAd;AACH,OALL,EAMKQ,KANL,CAMYC,KAAK,IAAI;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OARL;AASH,KAtD0C;;AAAA,SAwD3CU,cAxD2C,GAwDzBC,OAAD,IAAa;AAC1BnC,MAAAA,KAAK,CACAkB,GADL,CACS,iCAAiCiB,OAD1C,EAEKhB,IAFL,CAEWC,QAAQ,IAAI;AACf,aAAKC,QAAL,CAAc;AAAEL,UAAAA,UAAU,EAACI,QAAQ,CAACE;AAAtB,SAAd;AACH,OAJL,EAKKC,KALL,CAKYC,KAAK,IAAI;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAPL;AAQH,KAjE0C;;AAAA,SAkF3CY,sBAlF2C,GAkFlBC,eAAe,IAAI;AACxC,WAAKhB,QAAL,CACI;AAACV,QAAAA,aAAa,EAAE0B;AAAhB,OADJ;AAGH,KAtF0C;;AAAA,SAwF3CC,oBAxF2C,GAwFpBC,KAAK,IAAI;AAC5B,WAAKlB,QAAL,CACI;AAAET,QAAAA,QAAQ,EAAE2B;AAAZ,OADJ;AAGH,KA5F0C;AAAA;;AAU3CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,gBAAL;AACA,SAAKhB,cAAL;AACH;;AAsDD;AACAwB,EAAAA,oBAAoB,GAAG;AACnB,WAAOC,MAAM,CAACC,OAAP,CACH,KAAKjC,KAAL,CAAWH,SAAX,CAAqBqC,MAArB,CAA4B,CAACrC,SAAD,EAAYsC,IAAZ,KAAqB;AAAA,YACrCR,eADqC,GACjBQ,IADiB,CACrCR,eADqC;AAG7C9B,MAAAA,SAAS,CAAC8B,eAAD,CAAT,GAA6B9B,SAAS,CAAC8B,eAAD,CAAT,GACvB,CAAC,GAAG9B,SAAS,CAAC8B,eAAD,CAAb,EAAgCQ,IAAhC,CADuB,GAEvB,CAACA,IAAD,CAFN;AAIA,aAAOtC,SAAP;AACH,KARD,EAQG,EARH,CADG,CAAP;AAWH;;AAcDuC,EAAAA,MAAM,GAAG;AACL;AADK,UAEEnC,aAFF,GAEmB,KAAKD,KAFxB,CAEEC,aAFF;AAAA,UAGEC,QAHF,GAGc,KAAKF,KAHnB,CAGEE,QAHF;AAAA,UAIEI,UAJF,GAIgB,KAAKN,KAJrB,CAIEM,UAJF;AAAA,UAKED,WALF,GAKiB,KAAKL,KALtB,CAKEK,WALF;AAAA,UAMED,QANF,GAMc,KAAKJ,KANnB,CAMEI,QANF;AAAA,UAOED,SAPF,GAOe,KAAKH,KAPpB,CAOEG,SAPF;AASL,WAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,MAAD;AACI,MAAA,cAAc,EAAKG,UADvB;AAEI,MAAA,WAAW,EAAK,KAAKoB,sBAFzB;AAGI,MAAA,SAAS,EAAK5B,SAHlB;AAII,MAAA,QAAQ,EAAKI,QAJjB;AAKI,MAAA,WAAW,EAAK,KAAK0B,oBALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,EAQH,oBAAC,UAAD;AACI,MAAA,SAAS,EAAE/B,SADf;AAEI,MAAA,aAAa,EAAEI,aAFnB;AAGI,MAAA,QAAQ,EAAKC,QAHjB;AAII,MAAA,WAAW,EAAKG,WAJpB;AAKI,MAAA,SAAS,EAAKF,SALlB;AAMI,MAAA,QAAQ,EAAKC,QANjB;AAOI,MAAA,YAAY,EAAK,KAAKoB,cAP1B;AAQI,MAAA,WAAW,EAAK,KAAKH,aARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARG,EAkBH,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBG,CAAP;AAoBH;;AA3H0C","sourcesContent":["import axios from 'axios';\r\nimport React, { Component, Fragment } from 'react';\r\nimport Categories from './Categories';\r\nimport { Header, Footer } from './Layouts/index'; \r\nimport { foodItems, positions } from '../store.js';\r\n\r\n\r\nexport default class AppPage extends Component {\r\n    state = {\r\n        food_category: 'Beef',\r\n        posIndex: 0,\r\n        employees: [],\r\n        employee: {},\r\n        restaurants: [],\r\n        restaurant: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchRestaurants();\r\n        this.fetchEmployees();\r\n    }\r\n\r\n    fetchEmployees = () => {\r\n        axios\r\n            .get('http://localhost:12000/allemp')\r\n            .then( response => {\r\n                this.setState({ employees:response.data });\r\n                this.setState({employee:this.state.employees[0]});\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                this.setState({employees:[{name:\"ErrEmployee1\", employeeID:1, position:\"Chef\", phone:\"(123) 456-7890\"},\r\n                                          {name:\"ErrEmployee2\", employeeID:2, position:\"Hostess\", phone:\"(123) 456-7890\"},\r\n                                          {name:\"ErrEmployee3\", employeeID:3, position:\"Server\", phone:\"(123) 456-7890\"}]});\r\n                this.setState({employee:this.state.employees[0]});\r\n            });\r\n    }\r\n\r\n    setCurrentEmp = (employeeID) => {\r\n        axios\r\n            .get(\"http://localhost:12000/emp/\" + employeeID)\r\n            .then( response => {\r\n                this.setState({ employee:response.data });\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                const temp = this.state.employees[employeeID-1];\r\n                this.setState({employee:temp});\r\n            });\r\n    }\r\n\r\n    fetchRestaurants = () => {\r\n        axios\r\n            .get('http://localhost:12000/allrest')\r\n            .then( response => {\r\n                this.setState({ restaurants:response.data });\r\n                this.setState({ restaurant:this.state.restaurants[0] });\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    setCurrentRest = (storeID) => {\r\n        axios\r\n            .get(\"http://localhost:12000/rest/\" + storeID)\r\n            .then( response => {\r\n                this.setState({ restaurant:response.data });\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    //method to get foodItems based on their category\r\n    getItemsByCategories() {\r\n        return Object.entries(\r\n            this.state.foodItems.reduce((foodItems, item) => {\r\n                const { food_categories } = item\r\n\r\n                foodItems[food_categories] = foodItems[food_categories]\r\n                    ? [...foodItems[food_categories], item]\r\n                    : [item]\r\n\r\n                return foodItems    \r\n            }, {})\r\n        )\r\n    }\r\n\r\n    handleCategorySelected = food_categories => {\r\n        this.setState(\r\n            {food_category: food_categories}\r\n        )\r\n    }\r\n\r\n    handlePositionChosen = index => {\r\n        this.setState(\r\n            { posIndex: index }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //const foodItems = this.getItemsByCategories()\r\n        const {food_category} = this.state;\r\n        const {posIndex} = this.state;\r\n        const {restaurant} = this.state;\r\n        const {restaurants} = this.state;\r\n        const {employee} = this.state;\r\n        const {employees} = this.state;\r\n\r\n        return <Fragment>\r\n            <Header\r\n                currRestaurant = { restaurant }\r\n                onSelectCat = { this.handleCategorySelected }\r\n                positions = { positions }\r\n                posIndex = { posIndex }\r\n                onSelectPos = { this.handlePositionChosen }\r\n            />\r\n            <Categories\r\n                foodItems={foodItems}\r\n                food_category={food_category}\r\n                posIndex = { posIndex }\r\n                restaurants = { restaurants }\r\n                employees = { employees }\r\n                employee = { employee }\r\n                onSelectRest = { this.setCurrentRest }\r\n                onSelectEmp = { this.setCurrentEmp }\r\n            />\r\n            <Footer />\r\n        </Fragment>\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}