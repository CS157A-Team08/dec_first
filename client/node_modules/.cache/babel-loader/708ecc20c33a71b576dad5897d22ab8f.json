{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\src\\\\Components\\\\App2.js\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport Categories from './Categories';\nimport { Header, Footer } from './Layouts/index';\nimport { food_categories, foodItems, positions } from '../store.js';\nimport { connect } from 'tls';\nexport default class AppPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food_category: 'Beef',\n      restaurants: [{\n        \"storeID\": 1,\n        \"name\": null,\n        \"address\": null,\n        \"phone\": null,\n        \"createdAt\": \"2019-11-09T22:17:57.000Z\",\n        \"updatedAt\": \"2019-11-09T22:17:57.000Z\"\n      }],\n      err: ''\n    };\n\n    this.fetchRestaurants = async () => {\n      axios.get('http://localhost:3001/allrest').then(response => {\n        const rests = response.data;\n        this.setState({\n          restaurants: rests\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          err: 'SOMETHING WENT WRONG'\n        });\n        return null;\n      }); // let response = await axios.get('http://localhost:3001/allrest');\n      // let {rests} = response.data;\n      // this.setState({ restaurants:rests});\n    };\n\n    this.handleCategorySelected = food_categories => {\n      this.setState({\n        food_category: food_categories\n      });\n    };\n\n    this.handlePositionChosen = positions => {\n      this.setState({\n        positions: positions\n      });\n    };\n  }\n\n  componentDidMount() {\n    //this.props.fetchRestaurants();\n    this.setState({\n      err: 'NO ERROR'\n    });\n    this.fetchRestaurants();\n  }\n\n  //method to get foodItems based on their category\n  getItemsByCategories() {\n    return Object.entries(this.state.foodItems.reduce((foodItems, item) => {\n      const food_categories = item.food_categories;\n      foodItems[food_categories] = foodItems[food_categories] ? [...foodItems[food_categories], item] : [item];\n      return foodItems;\n    }, {}));\n  }\n\n  render() {\n    //const foodItems = this.getItemsByCategories()\n    const food_category = this.state.food_category;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Header, {\n      foodItems: foodItems,\n      onSelect: this.handleCategorySelected,\n      food_category: food_category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Something:\", axios.get('http://localhost:3001/allrest').data[0], \"Please.\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.restaurants.map(rest => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, rest.storeID))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.err), React.createElement(Categories, {\n      foodItems: foodItems,\n      food_category: food_category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      positions: positions,\n      onSelect: this.handlePositionChosen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\nAppPage.propTypes = {\n  restaurants: PropTypes.array.isRequired,\n  fetchRestaurants: PropTypes.func.isRequired\n}; //function mapStateToProps(state) {\n//    return {\n//        restaurants: state.restaurants\n//    }\n//}\n//export default connect(mapStateToProps, fetchRestaurants)(AppPage);","map":{"version":3,"sources":["C:/Users/angel/Documents/React Test App/express_react_folder/client/src/Components/App2.js"],"names":["axios","PropTypes","React","Component","Fragment","ReactDOM","Categories","Header","Footer","food_categories","foodItems","positions","connect","AppPage","state","food_category","restaurants","err","fetchRestaurants","get","then","response","rests","data","setState","catch","error","console","log","handleCategorySelected","handlePositionChosen","componentDidMount","getItemsByCategories","Object","entries","reduce","item","render","map","rest","storeID","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,iBAA/B;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,aAAtD;AACA,SAASC,OAAT,QAAwB,KAAxB;AAGA,eAAe,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC3CW,KAD2C,GACnC;AACJC,MAAAA,aAAa,EAAE,MADX;AAEJC,MAAAA,WAAW,EAAE,CAAC;AAAC,mBAAU,CAAX;AAAa,gBAAO,IAApB;AAAyB,mBAAU,IAAnC;AAAwC,iBAAQ,IAAhD;AAAqD,qBAAY,0BAAjE;AAA4F,qBAAY;AAAxG,OAAD,CAFT;AAGJC,MAAAA,GAAG,EAAE;AAHD,KADmC;;AAAA,SAc3CC,gBAd2C,GAcxB,YAAY;AAC3BlB,MAAAA,KAAK,CACAmB,GADL,CACS,+BADT,EAEKC,IAFL,CAEWC,QAAQ,IAAI;AACf,cAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAvB;AACA,aAAKC,QAAL,CAAc;AAAER,UAAAA,WAAW,EAACM;AAAd,SAAd;AACH,OALL,EAMKG,KANL,CAMYC,KAAK,IAAI;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKF,QAAL,CAAe;AAACP,UAAAA,GAAG,EAAC;AAAL,SAAf;AACA,eAAO,IAAP;AACH,OAVL,EAD2B,CAY3B;AACA;AACA;AACH,KA7B0C;;AAAA,SA8C3CY,sBA9C2C,GA8ClBpB,eAAe,IAAI;AACxC,WAAKe,QAAL,CACI;AAACT,QAAAA,aAAa,EAAEN;AAAhB,OADJ;AAGH,KAlD0C;;AAAA,SAoD3CqB,oBApD2C,GAoDpBnB,SAAS,IAAI;AAChC,WAAKa,QAAL,CACI;AAACb,QAAAA,SAAS,EAAEA;AAAZ,OADJ;AAGH,KAxD0C;AAAA;;AAO3CoB,EAAAA,iBAAiB,GAAG;AAChB;AAEA,SAAKP,QAAL,CAAc;AAACP,MAAAA,GAAG,EAAC;AAAL,KAAd;AACA,SAAKC,gBAAL;AACH;;AAmBD;AACAc,EAAAA,oBAAoB,GAAG;AACnB,WAAOC,MAAM,CAACC,OAAP,CACH,KAAKpB,KAAL,CAAWJ,SAAX,CAAqByB,MAArB,CAA4B,CAACzB,SAAD,EAAY0B,IAAZ,KAAqB;AAAA,YACrC3B,eADqC,GACjB2B,IADiB,CACrC3B,eADqC;AAG7CC,MAAAA,SAAS,CAACD,eAAD,CAAT,GAA6BC,SAAS,CAACD,eAAD,CAAT,GACvB,CAAC,GAAGC,SAAS,CAACD,eAAD,CAAb,EAAgC2B,IAAhC,CADuB,GAEvB,CAACA,IAAD,CAFN;AAIA,aAAO1B,SAAP;AACH,KARD,EAQG,EARH,CADG,CAAP;AAWH;;AAcD2B,EAAAA,MAAM,GAAG;AACL;AADK,UAEEtB,aAFF,GAEmB,KAAKD,KAFxB,CAEEC,aAFF;AAGL,WAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,MAAD;AACE,MAAA,SAAS,EAAEL,SADb;AAEE,MAAA,QAAQ,EAAE,KAAKmB,sBAFjB;AAGE,MAAA,aAAa,EAAEd,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,EAMH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEKf,KAAK,CAACmB,GAAN,CAAU,+BAAV,EAA2CI,IAA3C,CAAgD,CAAhD,CAFL,YANG,EAWH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,KAAL,CAAWE,WAAX,CAAuBsB,GAAvB,CAA2BC,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,OAAV,CAAnC,CADL,CAXG,EAcH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK1B,KAAL,CAAWG,GADhB,CAdG,EAiBH,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEP,SADf;AAEI,MAAA,aAAa,EAAEK,aAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBG,EAqBH,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAKJ,SAAtB;AACQ,MAAA,QAAQ,EAAI,KAAKmB,oBADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBG,CAAP;AAyBH;;AAtF0C;AAyF/CjB,OAAO,CAAC4B,SAAR,GAAoB;AAChBzB,EAAAA,WAAW,EAAEf,SAAS,CAACyC,KAAV,CAAgBC,UADb;AAEhBzB,EAAAA,gBAAgB,EAAEjB,SAAS,CAAC2C,IAAV,CAAeD;AAFjB,CAApB,C,CAKA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component, Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Categories from './Categories';\r\nimport { Header, Footer } from './Layouts/index'; \r\nimport { food_categories, foodItems, positions } from '../store.js';\r\nimport { connect } from 'tls';\r\n\r\n\r\nexport default class AppPage extends Component {\r\n    state = {\r\n        food_category: 'Beef',\r\n        restaurants: [{\"storeID\":1,\"name\":null,\"address\":null,\"phone\":null,\"createdAt\":\"2019-11-09T22:17:57.000Z\",\"updatedAt\":\"2019-11-09T22:17:57.000Z\"}],\r\n        err: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.props.fetchRestaurants();\r\n        \r\n        this.setState({err:'NO ERROR'});\r\n        this.fetchRestaurants();\r\n    }\r\n\r\n    fetchRestaurants = async () => {\r\n        axios\r\n            .get('http://localhost:3001/allrest')\r\n            .then( response => {\r\n                const rests = response.data;\r\n                this.setState({ restaurants:rests });\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                this.setState( {err:'SOMETHING WENT WRONG'} );\r\n                return null;\r\n            });\r\n        // let response = await axios.get('http://localhost:3001/allrest');\r\n        // let {rests} = response.data;\r\n        // this.setState({ restaurants:rests});\r\n    }\r\n\r\n    //method to get foodItems based on their category\r\n    getItemsByCategories() {\r\n        return Object.entries(\r\n            this.state.foodItems.reduce((foodItems, item) => {\r\n                const { food_categories } = item\r\n\r\n                foodItems[food_categories] = foodItems[food_categories]\r\n                    ? [...foodItems[food_categories], item]\r\n                    : [item]\r\n\r\n                return foodItems    \r\n            }, {})\r\n        )\r\n    }\r\n\r\n    handleCategorySelected = food_categories => {\r\n        this.setState(\r\n            {food_category: food_categories}\r\n        )\r\n    }\r\n\r\n    handlePositionChosen = positions => {\r\n        this.setState(\r\n            {positions: positions}\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //const foodItems = this.getItemsByCategories()\r\n        const {food_category} = this.state;\r\n        return <Fragment>\r\n            <Header\r\n              foodItems={foodItems}\r\n              onSelect={this.handleCategorySelected}\r\n              food_category={food_category}\r\n            />\r\n            <ul>\r\n                Something:\r\n                {axios.get('http://localhost:3001/allrest').data[0]}\r\n                Please.\r\n            </ul>\r\n            <ul>\r\n                {this.state.restaurants.map(rest => <li>{rest.storeID}</li>)}\r\n            </ul>\r\n            <ul>\r\n                {this.state.err}\r\n            </ul>\r\n            <Categories\r\n                foodItems={foodItems}\r\n                food_category={food_category}\r\n            />\r\n            <Footer positions = { positions }\r\n                    onSelect = {this.handlePositionChosen} \r\n            />\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nAppPage.propTypes = {\r\n    restaurants: PropTypes.array.isRequired,\r\n    fetchRestaurants: PropTypes.func.isRequired\r\n}\r\n\r\n//function mapStateToProps(state) {\r\n//    return {\r\n//        restaurants: state.restaurants\r\n//    }\r\n//}\r\n\r\n//export default connect(mapStateToProps, fetchRestaurants)(AppPage);"]},"metadata":{},"sourceType":"module"}