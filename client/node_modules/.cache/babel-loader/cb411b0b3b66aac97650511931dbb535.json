{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\src\\\\Components\\\\Categories\\\\index.js\";\nimport React, { Fragment } from 'react';\nimport { Grid, Paper, Typography, Button } from '@material-ui/core';\nimport 'typeface-roboto';\nimport GridList from '@material-ui/core/GridList';\nimport { mergeClasses } from '@material-ui/styles';\nconst styles = {\n  Paper: {\n    padding: 20,\n    marginTop: 10,\n    marginBottom: 10\n  }\n};\nvar shoppingCart = [];\nexport default (({\n  foodItems,\n  food_category,\n  posIndex\n}) => {\n  if (posIndex === 0) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, food_category), React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: mergeClasses.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      className: mergeClasses.gridList,\n      cols: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, foodItems.map(group => {\n      if (group.food_category === food_category) {\n        return React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          style: styles.Paper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, group.name, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), group.description));\n      }\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: styles.Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Shopping Cart\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(GridList, {\n      className: mergeClasses.gridList,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, shoppingCart.map(item => {\n      return React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, item.name, \"   x1\");\n    }))))));\n  } else if (posIndex === 1) {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Staff Page\");\n  } else {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Admin Page\");\n  }\n});","map":{"version":3,"sources":["C:/Users/angel/Documents/React Test App/express_react_folder/client/src/Components/Categories/index.js"],"names":["React","Fragment","Grid","Paper","Typography","Button","GridList","mergeClasses","styles","padding","marginTop","marginBottom","shoppingCart","foodItems","food_category","posIndex","root","gridList","map","group","name","description","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,UAArB,EAAiCC,MAAjC,QAA+C,mBAA/C;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAGA,MAAMC,MAAM,GAAG;AACXL,EAAAA,KAAK,EAAE;AAAEM,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,SAAS,EAAE,EAA1B;AAA8BC,IAAAA,YAAY,EAAE;AAA5C;AADI,CAAf;AAIA,IAAIC,YAAY,GAAG,EAAnB;AAEA,gBAAe,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,aAAZ;AAA2BC,EAAAA;AAA3B,CAAD,KAEX;AACI,MAAGA,QAAQ,KAAK,CAAhB,EAAmB;AACf,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,aADL,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEP,YAAY,CAACS,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,SAAS,EAAET,YAAY,CAACU,QAD5B;AAEI,MAAA,IAAI,EAAE,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKJ,SAAS,CAACK,GAAV,CAAiBC,KAAF,IACZ;AAAE,UAAIA,KAAK,CAACL,aAAN,KAAwBA,aAA5B,EAA2C;AACzC,eAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAEN,MAAM,CAACL,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKgB,KAAK,CAACC,IADX,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGKD,KAAK,CAACE,WAHX,CADL,CAAP;AAOC;AACJ,KAVJ,CAJL,CADJ,CADJ,CADJ,EAwBI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEb,MAAM,CAACL,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAEI,YAAY,CAACU,QAAlC;AAA4C,MAAA,IAAI,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,YAAY,CAACM,GAAb,CAAoBI,IAAF,IACf;AAAE,aAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIA,IAAI,CAACF,IADT,UAAP;AAGD,KAJJ,CADL,CAHJ,CAFJ,CAxBJ,CAJJ,CADJ;AA+CH,GAhDD,MAiDK,IAAIL,QAAQ,KAAK,CAAjB,EAAqB;AACtB,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,GANI,MAOA;AACD,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH;AACJ,CAlEL","sourcesContent":["import React, { Fragment } from 'react';\r\nimport {Grid, Paper, Typography, Button } from '@material-ui/core';\r\nimport 'typeface-roboto';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport { mergeClasses } from '@material-ui/styles';\r\n\r\n\r\nconst styles = {\r\n    Paper: { padding: 20, marginTop: 10, marginBottom: 10}\r\n}\r\n\r\nvar shoppingCart = []\r\n\r\nexport default ({foodItems, food_category, posIndex}) =>\r\n\r\n    {\r\n        if(posIndex === 0) {\r\n            return (\r\n                <Fragment>\r\n                    <Typography variant=\"h1\">\r\n                        {food_category}\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs>\r\n                            <div className={mergeClasses.root}>\r\n                                <GridList\r\n                                    className={mergeClasses.gridList}\r\n                                    cols={4} >\r\n\r\n                                    {foodItems.map( ( group ) =>\r\n                                        { if (group.food_category === food_category) {\r\n                                            return <Typography >\r\n                                                        <Paper style={styles.Paper}>\r\n                                                            {group.name}\r\n                                                            <div/>\r\n                                                            {group.description}\r\n                                                        </Paper>\r\n                                                    </Typography>\r\n                                            }\r\n                                        }   \r\n                                    )}\r\n\r\n                                </GridList>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3}>\r\n\r\n                            <Paper style={styles.Paper}>\r\n                                Shopping Cart\r\n                                <div/>\r\n                                <GridList className={mergeClasses.gridList} cols={1}>\r\n                                    {shoppingCart.map( ( item ) => \r\n                                        { return <Typography>\r\n                                                    {item.name}   x1\r\n                                                </Typography>\r\n                                        }\r\n                                    )}\r\n                                </GridList>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fragment>\r\n            )\r\n        }\r\n        else if( posIndex === 1 ) {\r\n            return (\r\n                <Grid>\r\n                    Staff Page\r\n                </Grid>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Grid>\r\n                    Admin Page\r\n                </Grid>\r\n            )\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}