{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\src\\\\Components\\\\App2.js\";\nimport axios from 'axios';\nimport React, { Component, Fragment } from 'react';\nimport Categories from './Categories';\nimport { Header, Footer } from './Layouts/index';\nimport { foodItems, positions } from '../store.js';\nexport default class AppPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food_category: 'Beef',\n      posIndex: 0,\n      employees: [],\n      restaurants: [],\n      restaurantID: 0,\n      restaurant: {}\n    };\n\n    this.fetchEmployees = () => {\n      axios.get('http://localhost:12000/allemp').then(response => {\n        this.setState({\n          employees: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          eployees: [{\n            name: \"ErrEmployee1\"\n          }, {\n            name: \"ErrEmployee2\"\n          }, {\n            name: \"ErrEmployee3\"\n          }]\n        });\n      });\n    };\n\n    this.fetchRestaurants = () => {\n      axios.get('http://localhost:12000/allrest').then(response => {\n        this.setState({\n          restaurants: response.data\n        });\n        this.setState({\n          restaurant: this.state.restaurants[0]\n        });\n        this.setState({\n          restaurantID: this.state.restaurants[0].storeID\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.setCurrentRest = storeID => {\n      axios.get(\"http://localhost:12000/rest/\" + storeID).then(response => {\n        console.log(\"***DEBUG MSG - getCurrentRest: \" + response.data);\n        this.setState({\n          restaurant: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleCategorySelected = food_categories => {\n      this.setState({\n        food_category: food_categories\n      });\n    };\n\n    this.handlePositionChosen = index => {\n      this.setState({\n        posIndex: index\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRestaurants();\n    this.fetchEmployees();\n  }\n\n  //method to get foodItems based on their category\n  getItemsByCategories() {\n    return Object.entries(this.state.foodItems.reduce((foodItems, item) => {\n      const food_categories = item.food_categories;\n      foodItems[food_categories] = foodItems[food_categories] ? [...foodItems[food_categories], item] : [item];\n      return foodItems;\n    }, {}));\n  }\n\n  render() {\n    //const foodItems = this.getItemsByCategories()\n    const food_category = this.state.food_category;\n    const posIndex = this.state.posIndex;\n    const restaurant = this.state.restaurant;\n    const restaurants = this.state.restaurants;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currRestaurant: restaurant,\n      onSelectCat: this.handleCategorySelected,\n      positions: positions,\n      posIndex: posIndex,\n      onSelectPos: this.handlePositionChosen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Categories, {\n      foodItems: foodItems,\n      food_category: food_category,\n      posIndex: posIndex,\n      restaurants: restaurants,\n      onSelectRest: this.setCurrentRest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/angel/Documents/React Test App/express_react_folder/client/src/Components/App2.js"],"names":["axios","React","Component","Fragment","Categories","Header","Footer","foodItems","positions","AppPage","state","food_category","posIndex","employees","restaurants","restaurantID","restaurant","fetchEmployees","get","then","response","setState","data","catch","error","console","log","eployees","name","fetchRestaurants","storeID","setCurrentRest","handleCategorySelected","food_categories","handlePositionChosen","index","componentDidMount","getItemsByCategories","Object","entries","reduce","item","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component, Fragment } from 'react';\r\nimport Categories from './Categories';\r\nimport { Header, Footer } from './Layouts/index'; \r\nimport { foodItems, positions } from '../store.js';\r\n\r\n\r\nexport default class AppPage extends Component {\r\n    state = {\r\n        food_category: 'Beef',\r\n        posIndex: 0,\r\n        employees: [],\r\n        restaurants: [],\r\n        restaurantID: 0,\r\n        restaurant: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchRestaurants();\r\n        this.fetchEmployees();\r\n    }\r\n\r\n    fetchEmployees = () => {\r\n        axios\r\n            .get('http://localhost:12000/allemp')\r\n            .then( response => {\r\n                this.setState({ employees:response.data });\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n                this.setState({eployees:[{name:\"ErrEmployee1\"}, {name:\"ErrEmployee2\"}, {name:\"ErrEmployee3\"}]});\r\n            });\r\n    }\r\n\r\n    fetchRestaurants = () => {\r\n        axios\r\n            .get('http://localhost:12000/allrest')\r\n            .then( response => {\r\n                this.setState({ restaurants:response.data });\r\n                this.setState({ restaurant:this.state.restaurants[0] });\r\n                this.setState({ restaurantID:this.state.restaurants[0].storeID });\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    setCurrentRest = (storeID) => {\r\n        axios\r\n            .get(\"http://localhost:12000/rest/\" + storeID)\r\n            .then( response => {\r\n                console.log(\"***DEBUG MSG - getCurrentRest: \" + response.data);\r\n                this.setState({ restaurant:response.data });\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    //method to get foodItems based on their category\r\n    getItemsByCategories() {\r\n        return Object.entries(\r\n            this.state.foodItems.reduce((foodItems, item) => {\r\n                const { food_categories } = item\r\n\r\n                foodItems[food_categories] = foodItems[food_categories]\r\n                    ? [...foodItems[food_categories], item]\r\n                    : [item]\r\n\r\n                return foodItems    \r\n            }, {})\r\n        )\r\n    }\r\n\r\n    handleCategorySelected = food_categories => {\r\n        this.setState(\r\n            {food_category: food_categories}\r\n        )\r\n    }\r\n\r\n    handlePositionChosen = index => {\r\n        this.setState(\r\n            { posIndex: index }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //const foodItems = this.getItemsByCategories()\r\n        const {food_category} = this.state;\r\n        const {posIndex} = this.state;\r\n        const {restaurant} = this.state;\r\n        const {restaurants} = this.state;\r\n\r\n        return <Fragment>\r\n            <Header\r\n                currRestaurant = { restaurant }\r\n                onSelectCat = { this.handleCategorySelected }\r\n                positions = { positions }\r\n                posIndex = { posIndex }\r\n                onSelectPos = { this.handlePositionChosen }\r\n            />\r\n            <Categories\r\n                foodItems={foodItems}\r\n                food_category={food_category}\r\n                posIndex = { posIndex }\r\n                restaurants = { restaurants }\r\n                onSelectRest = { this.setCurrentRest }\r\n            />\r\n            <Footer />\r\n        </Fragment>\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}