{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\src\\\\Components\\\\Categories\\\\index.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Grid, Paper, Typography, IconButton, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport 'typeface-roboto';\nimport GridList from '@material-ui/core/GridList';\nimport { mergeClasses } from '@material-ui/styles';\nconst styles = {\n  Paper: {\n    padding: 20,\n    marginTop: 10,\n    marginBottom: 10\n  }\n};\nexport default (({\n  foodItems,\n  food_category,\n  posIndex,\n  restaurants,\n  employees,\n  employee,\n  onSelectRest,\n  onSelectEmp\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        shoppingCart = _useState2[0],\n        setCart = _useState2[1]; // state = {\n  //     shoppingCart: [{name:\"Galbi\"},{name:\"Trash\"}]\n  // }\n\n\n  const handleCartAdd = item => {\n    setCart(shoppingCart => [...shoppingCart, item]);\n    console.log(\"DEBUG MSG: calling handleCartAdd for item: \" + item.name);\n  };\n\n  const handleRestClicked = storeID => {\n    onSelectRest(storeID);\n    console.log(\"DEBUG MSG - calling handleRestClicked, storeID: \" + storeID);\n  };\n\n  const handleEmpClicked = empID => {\n    onSelectEmp(empID);\n    console.log(\"DEBUG MSG - calling handleEmpClicked, empID: \" + empID);\n  }; // Customer page (Menu)\n\n\n  if (posIndex === 0) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, food_category), React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: mergeClasses.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      className: mergeClasses.gridList,\n      cols: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, foodItems.map(foodItem => {\n      if (foodItem.food_category === food_category) {\n        return React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          style: styles.Paper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, foodItem.name, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), foodItem.description, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          size: \"small\",\n          color: \"secondary\",\n          \"aria-label\": \"add\",\n          onClick: () => {\n            handleCartAdd(foodItem);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }))));\n      }\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: styles.Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Shopping Cart\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(GridList, {\n      className: mergeClasses.gridList,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, shoppingCart.map(item => {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, item.name, React.createElement(IconButton, {\n        \"aria-label\": \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })));\n    }))))));\n  } // Staff Page\n  else if (posIndex === 1) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Current Staff\"), React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: mergeClasses.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(GridList, {\n        className: mergeClasses.gridList,\n        cols: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, employees.map(emp => {\n        return React.createElement(Button, {\n          onClick: () => {\n            handleEmpClicked(emp.employeeID);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          style: styles.Paper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, emp.name)));\n      })))), React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        style: styles.Paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Employee Bio\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), employee.name, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), employee.position, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), employee.phone))));\n    } // Admin Page\n    else {\n        return React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Available Restaurants\"), React.createElement(GridList, {\n          className: mergeClasses.gridList,\n          cols: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, restaurants.map(rest => {\n          return React.createElement(Button, {\n            onClick: () => {\n              handleRestClicked(rest.storeID);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, React.createElement(Typography, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, React.createElement(Paper, {\n            style: styles.Paper,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, rest.name)));\n        })));\n      }\n});","map":{"version":3,"sources":["C:/Users/angel/Documents/React Test App/express_react_folder/client/src/Components/Categories/index.js"],"names":["React","Fragment","useState","Grid","Paper","Typography","IconButton","Button","AddIcon","DeleteIcon","GridList","mergeClasses","styles","padding","marginTop","marginBottom","foodItems","food_category","posIndex","restaurants","employees","employee","onSelectRest","onSelectEmp","shoppingCart","setCart","handleCartAdd","item","console","log","name","handleRestClicked","storeID","handleEmpClicked","empID","root","gridList","map","foodItem","description","emp","employeeID","position","phone","rest"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport {Grid, Paper, Typography, IconButton, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport 'typeface-roboto';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport { mergeClasses } from '@material-ui/styles';\r\n\r\n\r\nconst styles = {\r\n    Paper: { padding: 20, marginTop: 10, marginBottom: 10}\r\n}\r\n\r\nexport default ({foodItems, food_category, posIndex, restaurants, employees, employee, onSelectRest, onSelectEmp}) =>\r\n\r\n    {\r\n        const [shoppingCart, setCart] = useState([]);\r\n        // state = {\r\n        //     shoppingCart: [{name:\"Galbi\"},{name:\"Trash\"}]\r\n        // }\r\n\r\n        const handleCartAdd = item => {\r\n            setCart(shoppingCart => [...shoppingCart, item]);\r\n            console.log(\"DEBUG MSG: calling handleCartAdd for item: \" + item.name);\r\n        };\r\n\r\n        const handleRestClicked = storeID => {\r\n            onSelectRest(storeID);\r\n            console.log(\"DEBUG MSG - calling handleRestClicked, storeID: \" + storeID);\r\n        }\r\n\r\n        const handleEmpClicked = empID => {\r\n            onSelectEmp(empID);\r\n            console.log(\"DEBUG MSG - calling handleEmpClicked, empID: \" + empID);\r\n        }\r\n\r\n        // Customer page (Menu)\r\n        if(posIndex === 0) {\r\n            return (\r\n                <Fragment>\r\n                    <Typography variant=\"h1\">\r\n                        {food_category}\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs>\r\n                            <div className={mergeClasses.root}>\r\n                                <GridList\r\n                                    className={mergeClasses.gridList}\r\n                                    cols={4} >\r\n\r\n                                    {foodItems.map( ( foodItem ) =>\r\n                                        { if (foodItem.food_category === food_category) {\r\n                                            return <Typography >\r\n                                                        <Paper style={styles.Paper}>\r\n                                                            {foodItem.name}\r\n                                                            <div/>\r\n                                                            {foodItem.description}\r\n                                                            <div/>\r\n                                                            <IconButton\r\n                                                                size=\"small\"\r\n                                                                color=\"secondary\"\r\n                                                                aria-label=\"add\"\r\n                                                                onClick={() => { handleCartAdd(foodItem); }}>\r\n                                                                <AddIcon />\r\n                                                            </IconButton>\r\n                                                        </Paper>\r\n                                                    </Typography>\r\n                                            }\r\n                                        }   \r\n                                    )}\r\n\r\n                                </GridList>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3}>\r\n\r\n                            <Paper style={styles.Paper}>\r\n                                Shopping Cart\r\n                                <div/>\r\n                                <GridList className={mergeClasses.gridList} cols={1}>\r\n                                    {shoppingCart.map( ( item ) => \r\n                                        { return <ul>\r\n                                                    {item.name}\r\n                                                    <IconButton aria-label=\"delete\">\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </ul>\r\n                                        }\r\n                                    )}\r\n                                </GridList>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fragment>\r\n            )\r\n        }\r\n        // Staff Page\r\n        else if( posIndex === 1 ) {\r\n            return (\r\n                <Fragment>\r\n                    <Typography variant=\"h2\">\r\n                        Current Staff\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs>\r\n                            <div className={mergeClasses.root}>\r\n                                <GridList\r\n                                    className={mergeClasses.gridList}\r\n                                    cols={1} >\r\n\r\n                                    {employees.map( ( emp ) => {\r\n                                            return <Button onClick={() => { handleEmpClicked(emp.employeeID) }}>\r\n                                                        <Typography >\r\n                                                            <Paper style={styles.Paper}>\r\n                                                                {emp.name}\r\n                                                            </Paper>\r\n                                                        </Typography>\r\n                                                    </Button>\r\n                                        }\r\n                                    )}\r\n\r\n                                </GridList>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs>\r\n                            <Paper style={styles.Paper}>\r\n                                <Typography variant=\"h6\">\r\n                                    Employee Bio\r\n                                </Typography>\r\n                                <div/>\r\n                                {employee.name}\r\n                                <div/>\r\n                                {employee.position}\r\n                                <div/>\r\n                                {employee.phone}\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fragment>\r\n            )\r\n        }\r\n        // Admin Page\r\n        else {\r\n            return (\r\n                <Grid>\r\n                    <Typography variant=\"h2\">\r\n                        Available Restaurants\r\n                    </Typography>\r\n                    <GridList\r\n                        className={mergeClasses.gridList}\r\n                        cols={3} >\r\n\r\n                        {restaurants.map( ( rest ) => {\r\n                            return <Button onClick={() => { handleRestClicked(rest.storeID); }}>\r\n                                        <Typography >\r\n                                            <Paper style={styles.Paper}>\r\n                                                {rest.name}\r\n                                            </Paper>\r\n                                        </Typography>\r\n                                    </Button>\r\n                            }   \r\n                        )}\r\n\r\n                    </GridList>\r\n                </Grid>\r\n            )\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}