{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\src\\\\Components\\\\App2.js\";\nimport axios from 'axios';\nimport React, { Component, Fragment } from 'react';\nimport Categories from './Categories';\nimport { Header, Footer } from './Layouts/index';\nimport { foodItems, positions } from '../store.js';\nexport default class AppPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food_category: 'Beef',\n      posIndex: 0,\n      restaurants: [],\n      restaurantID: 0,\n      restaurant: {}\n    };\n\n    this.fetchRestaurants = () => {\n      axios.get('http://localhost:12000/allrest').then(response => {\n        this.setState({\n          restaurants: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.getCurrentRest = () => {\n      axios.get(\"http://localhost:12000/rest/\" + 2).then(response => {\n        console.log(\"***DEBUG MSG - getCurrentRest: \" + response.data);\n        this.setState({\n          restaurant: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleCategorySelected = food_categories => {\n      this.setState({\n        food_category: food_categories\n      });\n    };\n\n    this.handlePositionChosen = index => {\n      this.setState({\n        posIndex: index\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRestaurants();\n    this.getCurrentRest();\n  }\n\n  //method to get foodItems based on their category\n  getItemsByCategories() {\n    return Object.entries(this.state.foodItems.reduce((foodItems, item) => {\n      const food_categories = item.food_categories;\n      foodItems[food_categories] = foodItems[food_categories] ? [...foodItems[food_categories], item] : [item];\n      return foodItems;\n    }, {}));\n  }\n\n  render() {\n    //const foodItems = this.getItemsByCategories()\n    const food_category = this.state.food_category;\n    const posIndex = this.state.posIndex;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Header, {\n      foodItems: foodItems,\n      onSelectCat: this.handleCategorySelected,\n      food_category: food_category,\n      positions: positions,\n      posIndex: posIndex,\n      onSelectPos: this.handlePositionChosen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.restaurant.id), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.restaurants.map(rest => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, rest.createdAt))), React.createElement(Categories, {\n      foodItems: foodItems,\n      food_category: food_category,\n      posIndex: posIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/angel/Documents/React Test App/express_react_folder/client/src/Components/App2.js"],"names":["axios","React","Component","Fragment","Categories","Header","Footer","foodItems","positions","AppPage","state","food_category","posIndex","restaurants","restaurantID","restaurant","fetchRestaurants","get","then","response","setState","data","catch","error","console","log","getCurrentRest","handleCategorySelected","food_categories","handlePositionChosen","index","componentDidMount","getItemsByCategories","Object","entries","reduce","item","render","id","map","rest","createdAt"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component, Fragment } from 'react';\r\nimport Categories from './Categories';\r\nimport { Header, Footer } from './Layouts/index'; \r\nimport { foodItems, positions } from '../store.js';\r\n\r\n\r\nexport default class AppPage extends Component {\r\n    state = {\r\n        food_category: 'Beef',\r\n        posIndex: 0,\r\n        restaurants: [],\r\n        restaurantID: 0,\r\n        restaurant: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchRestaurants();\r\n        this.getCurrentRest();\r\n    }\r\n\r\n    fetchRestaurants = () => {\r\n        axios\r\n            .get('http://localhost:12000/allrest')\r\n            .then( response => {\r\n                this.setState({ restaurants:response.data });\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    getCurrentRest = () => {\r\n        axios\r\n            .get(\"http://localhost:12000/rest/\" + 2)\r\n            .then( response => {\r\n                console.log(\"***DEBUG MSG - getCurrentRest: \" + response.data);\r\n                this.setState({ restaurant:response.data });\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    //method to get foodItems based on their category\r\n    getItemsByCategories() {\r\n        return Object.entries(\r\n            this.state.foodItems.reduce((foodItems, item) => {\r\n                const { food_categories } = item\r\n\r\n                foodItems[food_categories] = foodItems[food_categories]\r\n                    ? [...foodItems[food_categories], item]\r\n                    : [item]\r\n\r\n                return foodItems    \r\n            }, {})\r\n        )\r\n    }\r\n\r\n    handleCategorySelected = food_categories => {\r\n        this.setState(\r\n            {food_category: food_categories}\r\n        )\r\n    }\r\n\r\n    handlePositionChosen = index => {\r\n        this.setState(\r\n            { posIndex: index }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //const foodItems = this.getItemsByCategories()\r\n        const {food_category} = this.state;\r\n        const {posIndex} = this.state;\r\n        return <Fragment>\r\n            <Header\r\n                foodItems = { foodItems }\r\n                onSelectCat = { this.handleCategorySelected }\r\n                food_category = { food_category }\r\n                positions = { positions }\r\n                posIndex = { posIndex }\r\n                onSelectPos = { this.handlePositionChosen }\r\n            />\r\n            <ul>\r\n                {this.state.restaurant.id}\r\n            </ul>\r\n            <ul>\r\n                {this.state.restaurants.map(rest => <li>{rest.createdAt}</li>)}\r\n            </ul>\r\n            <Categories\r\n                foodItems={foodItems}\r\n                food_category={food_category}\r\n                posIndex = { posIndex }\r\n            />\r\n            <Footer />\r\n        </Fragment>\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}