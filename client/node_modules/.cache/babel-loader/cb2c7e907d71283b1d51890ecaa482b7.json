{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\src\\\\Components\\\\Categories\\\\index.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Grid, Paper, Typography, IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport 'typeface-roboto';\nimport GridList from '@material-ui/core/GridList';\nimport { mergeClasses } from '@material-ui/styles';\nconst styles = {\n  Paper: {\n    padding: 20,\n    marginTop: 10,\n    marginBottom: 10\n  }\n};\nexport default (({\n  foodItems,\n  food_category,\n  posIndex,\n  restaurants,\n  onSelectRest\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        shoppingCart = _useState2[0],\n        setCart = _useState2[1]; // state = {\n  //     shoppingCart: [{name:\"Galbi\"},{name:\"Trash\"}]\n  // }\n\n\n  const handleCartAdd = item => {\n    setCart(shoppingCart => [...shoppingCart, item]);\n    console.log(\"DEBUG MSG: calling handleCartAdd for item: \" + item.name);\n  };\n\n  const handleRestClicked = index => {\n    onSelectRest(index);\n    console.log(\"DEBUG MSG - calling handleRestCicked\");\n  }; // Customer page (Menu)\n\n\n  if (posIndex === 0) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, food_category), React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: mergeClasses.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      className: mergeClasses.gridList,\n      cols: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, foodItems.map(foodItem => {\n      if (foodItem.food_category === food_category) {\n        return React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          style: styles.Paper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, foodItem.name, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), foodItem.description, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(IconButton, {\n          size: \"small\",\n          color: \"secondary\",\n          \"aria-label\": \"add\",\n          onClick: () => {\n            handleCartAdd(foodItem);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }))));\n      }\n    })))), React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: styles.Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Shopping Cart\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(GridList, {\n      className: mergeClasses.gridList,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, shoppingCart.map(item => {\n      return React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, item.name, React.createElement(IconButton, {\n        \"aria-label\": \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })));\n    }))))));\n  } // Staff Page\n  else if (posIndex === 1) {\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Staff Page\");\n    } // Admin Page\n    else {\n        return React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Admin Page\", React.createElement(GridList, {\n          className: mergeClasses.gridList,\n          cols: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, foodItems.map(foodItem => {\n          if (foodItem.food_category === food_category) {\n            return React.createElement(Typography, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }, React.createElement(Paper, {\n              style: styles.Paper,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113\n              },\n              __self: this\n            }, foodItem.name, React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }), foodItem.description, React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117\n              },\n              __self: this\n            }), React.createElement(IconButton, {\n              size: \"small\",\n              color: \"secondary\",\n              \"aria-label\": \"add\",\n              onClick: () => {\n                handleCartAdd(foodItem);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118\n              },\n              __self: this\n            }, React.createElement(AddIcon, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }))));\n          }\n        })));\n      }\n});","map":{"version":3,"sources":["C:/Users/angel/Documents/React Test App/express_react_folder/client/src/Components/Categories/index.js"],"names":["React","Fragment","useState","Grid","Paper","Typography","IconButton","AddIcon","DeleteIcon","GridList","mergeClasses","styles","padding","marginTop","marginBottom","foodItems","food_category","posIndex","restaurants","onSelectRest","shoppingCart","setCart","handleCartAdd","item","console","log","name","handleRestClicked","index","root","gridList","map","foodItem","description"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport {Grid, Paper, Typography, IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport 'typeface-roboto';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport { mergeClasses } from '@material-ui/styles';\r\n\r\n\r\nconst styles = {\r\n    Paper: { padding: 20, marginTop: 10, marginBottom: 10}\r\n}\r\n\r\nexport default ({foodItems, food_category, posIndex, restaurants, onSelectRest}) =>\r\n\r\n    {\r\n        const [shoppingCart, setCart] = useState([]);\r\n        // state = {\r\n        //     shoppingCart: [{name:\"Galbi\"},{name:\"Trash\"}]\r\n        // }\r\n\r\n        const handleCartAdd = item => {\r\n            setCart(shoppingCart => [...shoppingCart, item]);\r\n            console.log(\"DEBUG MSG: calling handleCartAdd for item: \" + item.name);\r\n        };\r\n\r\n        const handleRestClicked = index => {\r\n            onSelectRest(index);\r\n            console.log(\"DEBUG MSG - calling handleRestCicked\");\r\n        }\r\n\r\n        // Customer page (Menu)\r\n        if(posIndex === 0) {\r\n            return (\r\n                <Fragment>\r\n                    <Typography variant=\"h1\">\r\n                        {food_category}\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs>\r\n                            <div className={mergeClasses.root}>\r\n                                <GridList\r\n                                    className={mergeClasses.gridList}\r\n                                    cols={4} >\r\n\r\n                                    {foodItems.map( ( foodItem ) =>\r\n                                        { if (foodItem.food_category === food_category) {\r\n                                            return <Typography >\r\n                                                        <Paper style={styles.Paper}>\r\n                                                            {foodItem.name}\r\n                                                            <div/>\r\n                                                            {foodItem.description}\r\n                                                            <div/>\r\n                                                            <IconButton\r\n                                                                size=\"small\"\r\n                                                                color=\"secondary\"\r\n                                                                aria-label=\"add\"\r\n                                                                onClick={() => { handleCartAdd(foodItem); }}>\r\n                                                                <AddIcon />\r\n                                                            </IconButton>\r\n                                                        </Paper>\r\n                                                    </Typography>\r\n                                            }\r\n                                        }   \r\n                                    )}\r\n\r\n                                </GridList>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={3}>\r\n\r\n                            <Paper style={styles.Paper}>\r\n                                Shopping Cart\r\n                                <div/>\r\n                                <GridList className={mergeClasses.gridList} cols={1}>\r\n                                    {shoppingCart.map( ( item ) => \r\n                                        { return <Typography>\r\n                                                    {item.name}\r\n                                                    <IconButton aria-label=\"delete\">\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </Typography>\r\n                                        }\r\n                                    )}\r\n                                </GridList>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fragment>\r\n            )\r\n        }\r\n        // Staff Page\r\n        else if( posIndex === 1 ) {\r\n            return (\r\n                <Grid>\r\n                    Staff Page\r\n                </Grid>\r\n            )\r\n        }\r\n        // Admin Page\r\n        else {\r\n            return (\r\n                <Grid>\r\n                    Admin Page\r\n                    <GridList\r\n                        className={mergeClasses.gridList}\r\n                        cols={1} >\r\n\r\n                        {foodItems.map( ( foodItem ) =>\r\n                            { if (foodItem.food_category === food_category) {\r\n                                return <Typography >\r\n                                            <Paper style={styles.Paper}>\r\n                                                {foodItem.name}\r\n                                                <div/>\r\n                                                {foodItem.description}\r\n                                                <div/>\r\n                                                <IconButton\r\n                                                    size=\"small\"\r\n                                                    color=\"secondary\"\r\n                                                    aria-label=\"add\"\r\n                                                    onClick={() => { handleCartAdd(foodItem); }}>\r\n                                                    <AddIcon />\r\n                                                </IconButton>\r\n                                            </Paper>\r\n                                        </Typography>\r\n                                }\r\n                            }   \r\n                        )}\r\n\r\n                    </GridList>\r\n                </Grid>\r\n            )\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}