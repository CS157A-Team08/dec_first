{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\src\\\\Components\\\\App2.js\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport Categories from './Categories';\nimport { Header, Footer } from './Layouts/index';\nimport { food_categories, foodItems, positions } from '../store.js';\nimport { connect } from 'tls';\n\nfunction fetchRestaurants() {\n  return dispatch => {\n    return axios.get('http://localhost:3001/allrest');\n  }; // return (\n  //     <div>\n  //         HELLO, WORLD!!!\n  //     </div>\n  // )\n}\n\nexport default class AppPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food_category: 'Beef',\n      restaurants: [{\n        \"storeID\": 1,\n        \"name\": null,\n        \"address\": null,\n        \"phone\": null,\n        \"createdAt\": \"2019-11-09T22:17:57.000Z\",\n        \"updatedAt\": \"2019-11-09T22:17:57.000Z\"\n      }]\n    };\n\n    this.handleCategorySelected = food_categories => {\n      this.setState({\n        food_category: food_categories\n      });\n    };\n\n    this.handlePositionChosen = positions => {\n      this.setState({\n        positions: positions\n      });\n    };\n  }\n\n  componentDidMount() {\n    //this.props.fetchRestaurants();\n    axios.get('http://localhost:3001/allrest').then(response => {\n      const restaurants = response.data;\n      this.setState({\n        restaurants\n      });\n    });\n  } //method to get foodItems based on their category\n\n\n  getItemsByCategories() {\n    return Object.entries(this.state.foodItems.reduce((foodItems, item) => {\n      const food_categories = item.food_categories;\n      foodItems[food_categories] = foodItems[food_categories] ? [...foodItems[food_categories], item] : [item];\n      return foodItems;\n    }, {}));\n  }\n\n  render() {\n    //const foodItems = this.getItemsByCategories()\n    const food_category = this.state.food_category;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Header, {\n      foodItems: foodItems,\n      onSelect: this.handleCategorySelected,\n      food_category: food_category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.restaurants.map(rest => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, rest.storeID))), React.createElement(Categories, {\n      foodItems: foodItems,\n      food_category: food_category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      positions: positions,\n      onSelect: this.handlePositionChosen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\nAppPage.propTypes = {\n  restaurants: PropTypes.array.isRequired,\n  fetchRestaurants: PropTypes.func.isRequired\n}; //function mapStateToProps(state) {\n//    return {\n//        restaurants: state.restaurants\n//    }\n//}\n//export default connect(mapStateToProps, fetchRestaurants)(AppPage);","map":{"version":3,"sources":["C:/Users/angel/Documents/React Test App/express_react_folder/client/src/Components/App2.js"],"names":["axios","PropTypes","React","Component","Fragment","ReactDOM","Categories","Header","Footer","food_categories","foodItems","positions","connect","fetchRestaurants","dispatch","get","AppPage","state","food_category","restaurants","handleCategorySelected","setState","handlePositionChosen","componentDidMount","then","response","data","getItemsByCategories","Object","entries","reduce","item","render","map","rest","storeID","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component, Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Categories from './Categories';\r\nimport { Header, Footer } from './Layouts/index'; \r\nimport { food_categories, foodItems, positions } from '../store.js';\r\nimport { connect } from 'tls';\r\n\r\nfunction fetchRestaurants() {\r\n    return dispatch => {\r\n       return axios.get('http://localhost:3001/allrest');\r\n    }\r\n\r\n    // return (\r\n    //     <div>\r\n    //         HELLO, WORLD!!!\r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default class AppPage extends Component {\r\n    state = {\r\n        food_category: 'Beef',\r\n        restaurants: [{\"storeID\":1,\"name\":null,\"address\":null,\"phone\":null,\"createdAt\":\"2019-11-09T22:17:57.000Z\",\"updatedAt\":\"2019-11-09T22:17:57.000Z\"}]\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.props.fetchRestaurants();\r\n        axios.get('http://localhost:3001/allrest')\r\n            .then( response => {\r\n                const restaurants = response.data;\r\n                this.setState({ restaurants });\r\n        })\r\n    }\r\n\r\n    //method to get foodItems based on their category\r\n    getItemsByCategories() {\r\n        return Object.entries(\r\n            this.state.foodItems.reduce((foodItems, item) => {\r\n                const { food_categories } = item\r\n\r\n                foodItems[food_categories] = foodItems[food_categories]\r\n                    ? [...foodItems[food_categories], item]\r\n                    : [item]\r\n\r\n                return foodItems    \r\n            }, {})\r\n        )\r\n    }\r\n\r\n    handleCategorySelected = food_categories => {\r\n        this.setState(\r\n            {food_category: food_categories}\r\n        )\r\n    }\r\n\r\n    handlePositionChosen = positions => {\r\n        this.setState(\r\n            {positions: positions}\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //const foodItems = this.getItemsByCategories()\r\n        const {food_category} = this.state;\r\n        return <Fragment>\r\n            <Header\r\n              foodItems={foodItems}\r\n              onSelect={this.handleCategorySelected}\r\n              food_category={food_category}\r\n            />\r\n            <ul>\r\n                {this.state.restaurants.map(rest => <li>{rest.storeID}</li>)}\r\n            </ul>\r\n            <Categories\r\n                foodItems={foodItems}\r\n                food_category={food_category}\r\n            />\r\n            <Footer positions = { positions }\r\n                    onSelect = {this.handlePositionChosen} \r\n            />\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nAppPage.propTypes = {\r\n    restaurants: PropTypes.array.isRequired,\r\n    fetchRestaurants: PropTypes.func.isRequired\r\n}\r\n\r\n//function mapStateToProps(state) {\r\n//    return {\r\n//        restaurants: state.restaurants\r\n//    }\r\n//}\r\n\r\n//export default connect(mapStateToProps, fetchRestaurants)(AppPage);"]},"metadata":{},"sourceType":"module"}