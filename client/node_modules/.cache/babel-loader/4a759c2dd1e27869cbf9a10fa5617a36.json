{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Documents\\\\React Test App\\\\express_react_folder\\\\client\\\\src\\\\Components\\\\App2.js\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport Categories from './Categories';\nimport { Header, Footer } from './Layouts/index';\nimport { food_categories, foodItems, positions } from '../store.js';\nimport { connect } from 'tls';\nexport default class AppPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food_category: 'Beef',\n      positions: '',\n      restaurants: []\n    };\n\n    this.fetchRestaurants = () => {\n      axios.get('http://192.168.1.67:3001/allrest').then(response => {\n        this.setState({\n          restaurants: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleCategorySelected = food_categories => {\n      this.setState({\n        food_category: food_categories\n      });\n    };\n\n    this.handlePositionChosen = positions => {\n      this.setState({\n        positions: positions\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRestaurants();\n  }\n\n  //method to get foodItems based on their category\n  getItemsByCategories() {\n    return Object.entries(this.state.foodItems.reduce((foodItems, item) => {\n      const food_categories = item.food_categories;\n      foodItems[food_categories] = foodItems[food_categories] ? [...foodItems[food_categories], item] : [item];\n      return foodItems;\n    }, {}));\n  }\n\n  render() {\n    //const foodItems = this.getItemsByCategories()\n    const food_category = this.state.food_category;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      foodItems: foodItems,\n      onSelectCat: this.handleCategorySelected,\n      food_category: food_category,\n      positions: positions,\n      onSelectPos: this.handlePositionChosen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.restaurants.map(rest => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, rest.createdAt))), React.createElement(Categories, {\n      foodItems: foodItems,\n      food_category: food_category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/angel/Documents/React Test App/express_react_folder/client/src/Components/App2.js"],"names":["axios","PropTypes","React","Component","Fragment","ReactDOM","Categories","Header","Footer","food_categories","foodItems","positions","connect","AppPage","state","food_category","restaurants","fetchRestaurants","get","then","response","setState","data","catch","error","console","log","handleCategorySelected","handlePositionChosen","componentDidMount","getItemsByCategories","Object","entries","reduce","item","render","map","rest","createdAt"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component, Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Categories from './Categories';\r\nimport { Header, Footer } from './Layouts/index'; \r\nimport { food_categories, foodItems, positions } from '../store.js';\r\nimport { connect } from 'tls';\r\n\r\n\r\nexport default class AppPage extends Component {\r\n    state = {\r\n        food_category: 'Beef',\r\n        positions: '',\r\n        restaurants: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchRestaurants();\r\n    }\r\n\r\n    fetchRestaurants = () => {\r\n        axios\r\n            .get('http://192.168.1.67:3001/allrest')\r\n            .then( response => {\r\n                this.setState({ restaurants:response.data });\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    //method to get foodItems based on their category\r\n    getItemsByCategories() {\r\n        return Object.entries(\r\n            this.state.foodItems.reduce((foodItems, item) => {\r\n                const { food_categories } = item\r\n\r\n                foodItems[food_categories] = foodItems[food_categories]\r\n                    ? [...foodItems[food_categories], item]\r\n                    : [item]\r\n\r\n                return foodItems    \r\n            }, {})\r\n        )\r\n    }\r\n\r\n    handleCategorySelected = food_categories => {\r\n        this.setState(\r\n            {food_category: food_categories}\r\n        )\r\n    }\r\n\r\n    handlePositionChosen = positions => {\r\n        this.setState(\r\n            {positions: positions}\r\n        )\r\n    }\r\n\r\n    render() {\r\n        //const foodItems = this.getItemsByCategories()\r\n        const {food_category} = this.state;\r\n        return <Fragment>\r\n            <Header\r\n                foodItems = { foodItems }\r\n                onSelectCat = { this.handleCategorySelected }\r\n                food_category = { food_category }\r\n                positions = { positions }\r\n                onSelectPos = { this.handlePositionChosen }\r\n            />\r\n            <ul>\r\n                {this.state.restaurants.map(rest => <li>{rest.createdAt}</li>)}\r\n            </ul>\r\n            <Categories\r\n                foodItems={foodItems}\r\n                food_category={food_category}\r\n            />\r\n            <Footer \r\n            />\r\n        </Fragment>\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}